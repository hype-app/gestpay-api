### callPagamS2S

This service performs an authorization request. 

Merchants can use this method to perform the transaction, passing all the parameters useful to define all the transaction’s features. 

#### Request parameters

> request example: 

```xml
<callPagamS2S>
  <shopLogin>9000002</shopLogin>
  <uicCode>242</uicCode><!-- euro -->
  <amount>24.21</amount>
  <shopTransactionId>MYSHOP-0001</shopTransactionId>
  <!-- here we have choosen to pay with credit card data -->
  <cardNumber>1234567812345678</cardNumber>
  <expiryMonth>06</expiryMonth>
  <expiryYear>21</expiryYear>
  <!-- if we wanted to pay by token: 
  <tokenValue>ABCD12345678EFGD</tokenValue>
  -->
  <buyerName>John Fitzgerald Kennedy</buyerName>
  <buyerEmail>johnny.kennedy@usa.com</buyerEmail>
  <languageId>2</languageId><!-- english -->
  <cvv>987</cvv>
  <PARes />
  <transKey />
  <customInfo></customInfo>
  <requestToken>MASKEDPAN</requestToken>
  <itemType>physical</itemType>
  <recurrent>false</recurrent>
  <shippingDetails>
    <shipToName>Jonny Kennedy</shipToName>
    <shipToStreet>83 Beals street</shipToStreet>
    <shipToCity>Brookline</shipToCity>
    <shipToState>MA</shipToState>
    <shipToCountryCode>US</shipToCountryCode>
    <shipToZip>02446</shipToZip>
    <shipToStreet2 />
  </shippingDetails>
  <OrderDetails>
  ... 
  </OrderDetails>
  <transDetails>
    ...
  </transDetails>
</callPagamS2S>
```

First we describe the mandatory attributes. 

| Name | Description | Data Type | max length |
| ---- | ----------- | --------- | ---------- |
| **`shopLogin`** | shopLogin value | string | 30 |
| **`uicCode`** | currency code | number | 3 |
| **`amount`** | the amount of the transaction | numeric | 9 |
| **`shopTransactionId`** | shop transaction ID value | string | 50 |

Depending on the payment method, you can choose to send **Credit Card** data: 

| Name | Description | Data Type | max length |
| ---- | ----------- | --------- | ---------- |
| **`cardNumber`** | card account number | string | 50 |
| **`expiryMonth`** | card expiration month | string | 2 | 
| **`expiryYear`** | card expiration year | string | 2 |

Or a **token**: 

| Name | Description | Data Type | max length |
| ---- | ----------- | --------- | ---------- |
| **`tokenValue`**   | String containing the `token` value returned by Gestpay. <br/> In case of `PayPalBillingAgreement` this token value is the token returned by PayPal during the Billing Agreements. | string | 25 | 

<aside class="notice">You must use exactly one among <strong>Credit Card data</strong> and <strong>Token value</strong>.</aside>

The following features may be optionally assigned:   

| Name | Description | Data Type | max length |
| ---- | ----------- | --------- | ---------- |
| `apikey` | If you have selected the _apiKey_ authentication method, add the `apikey` field to the call. [More details about the apiKey here](#authorizing-calls-against-gestpay). |  |  | 
| `buyerEmail`      |  buyer’s e-mail address. Using `:NOSEND:` before the email address, it' s possible to pass the email information but avoid to send an email to the buyer. | string | 50 |
| `buyerName`       | buyer’s name | string | 50 | 
| `customInfo`      | A string containing optional customised parameters. See [customInfo](#customInfo) section for more details. | string | 1000 | 
| `cvv`             | security code of the card. Refer to [this page](<%= config[:doc_url] %>/adv/cvv-field-handling.html) to enable and use it. | string | 4 | 
| `languageId`      | language to use for e-mails to the buyer | number | 2 |
| `PARes`        | encrypted string returned by Issuer (for 3D-Secure   transactions only. See [3D-secure transactions](<%= config[:doc_url] %>/adv/3dsecure-transactions.html) for more details.) | string | 4096 | 
| `transKey`        | transaction ID value for 3D-Secure transactions. See [3D-secure transactions](<%= config[:doc_url] %>/soap/security/3d-secure-transactions/) for more details. | number | 18 | 
| `requestToken`    | `MASKEDPAN` for a Standard Token any other value for Custom  Token | string | 25 | 
| `clientIP`        | For PayPal Billing Agreements it is required only in "one click" mode transaction. <br> For AMEX transaction not in Euro, in this field the merchant could provide the client IP address to activate the Enhanced Authorization AAV.<br>**Mandatory if you use <%= config[:riskified] %> with S2S.** | string | 45 |
| `itemType`     | Item Category: `digital`/`physical` (If `physical` the `ShippingDetails` have to be filled) | string | 250 | 
| `recurrent` | true if it's a recurrent payment, false if not. | boolean | 5 | 
| `shippingDetails` | contains the shipping address. Used for [paypal seller protection](<%= config[:doc_url] %>/oth/paypal.html).
| [`OrderDetails`](#orderdetails) | contains every other info needed to handle the payment. It is used by  Gestpay Guaranteed Payment. 
| `transDetails` <span class='beta'>sandbox</span> | Contians informations for 3DS 2.0 authentication | object | - |

- children of `ShippingDetails`:

|               |           |          |       | 
| ------------- | --------- | -------- |------ |
| `shipToName` | shipping name | string | 32 | 
| `shipToStreet` | shipping address | string | 100 |
| `shipToState` | shipping state (see [Paypal State Codes](#paypal-state-amp-province-codes) table) | string | 40 | 
| `shipToCountryCode` | shipping country code (see [Paypal Country Codes](#paypal-country-codes) table) | string | 2 | 
| `shipToZip` | the shipping Zip | string | 20 | 
| `shipToStreet2` | an additional field for the shipping  address | string | 200 | 

- children of `transDetails` <span class='beta'>sandbox</span>: 

| Name | Description | Format/length | 
| ---- | ----------- | --------- | 
| `type` | Transaction type. Possible values:<ul><li>01F: Recurring first</li><li>01N: Recurring next</li><li>02F: Instalment first</li><li>02N: Instalment next</li><li>08: Mail Order</li><li>09: Telephone Order</li><li>EC: Ecommerce</li><li>NPA: only authentication</li></ul> If not evaluated, the Gestpay rule is applied. | 3 |
| `threeDsAuthResult` | Result of the 3DS authentication done with another provider (Axerve will manage the authorization request, considering the 3DS phase already completed) | object |  |
| <div class="inside-icon"></div> `authenticationLevel` | Transaction is successfully authenticated by 3DS:<ul><li>1H: 3DS 1.0 half</li><li>1F: 3DS 1.0 full</li><li>2F: 3DS 2.0 frictionless</li><li>2C: 3Ds 2.0 challenge</li><li>2E: 3DS 2.0 exemption</li><li>OL: One Leg - Authentication not required</li></ul> |  2 
| <div style="white-space: nowrap;"><div class="inside-icon"></div> `authenticationStatus`</div> | Status of the authentication | 1
| <div class="inside-icon"></div> `XID` | Transaction unique id assigned by Directory Server | 36  
| <div class="inside-icon"></div> `AV` | Cardholder Authentication Verification Value, proof of authentication done | 28 
| <div class="inside-icon"></div> `ECI` | Electronic Commerce Indicator |  2 
| <div class="inside-icon"></div> `AVAlgorithm` | Cardholder Authentication Verification Algoritm, valorized only with 3DS 1.0 | 2 
| [`threeDsContainer`](#3ds-2-0-fields) | Container of additional data defined in 3DS2 protocol, that better define the transaction. The data here included will be used for assessing the risk level of the transaction with the purpose of ensuring security without affecting the buyer's experience | object |  |
| `recurringTransaction` | Contains informations necessary in case of recurring payment | object| |
| <div class="inside-icon"></div> `installNo` | Required in case of installment payments. It indicates the maximum number of allowed transactions | 3 |
| <div class="inside-icon"></div> `expiry` | Required for Recurring Payments. Date after which no further transaction shall be performed | 8 |
| <div class="inside-icon"></div> `frequency` | Required for Recurring Payments. It indicates the minimum number of days between two transactions of the same plan | 4 |
| `previousTransDetails` | Contains the details of a previous authenticated transaction for the same cardholder on the same merchant. If present, it can help to increase the chances of a frictionless authentication | object |
| <div class="inside-icon"></div> `authData` | Prior Transaction Authentication Data | string |
| <div class="inside-icon"></div> `authMethod` | Prior Transaction Authentication Method. Possible values: <ul><li>01: Frictionless authentication occurred by ACS </li><li>02: Cardholder challenge occurred by ACS </li><li>03: AVS verified </li><li>04: Other issuer methods</li></ul> | 2 |
| <div style="white-space: nowrap;"><div class="inside-icon"></div> `authTimestamp`</div> | Prior Transaction Authentication Timestamp | 12 |
| <div class="inside-icon"></div> `acsID` | Prior Transaction Authentication Reference (ACD Transaction ID) | 36 |
| <div style="white-space: nowrap;"><div class="inside-icon"></div> `bankTransactionID`</div> | Prior Transaction Bank ID (if it was managed by Gestpay) | 18 |

#### Response fields 

> response example: 

```xml
<GestPayS2S xmlns="">
  <TransactionType>PAGAM</TransactionType>
  <TransactionResult>OK</TransactionResult>
  <ShopTransactionID>MYSHOP-0001</ShopTransactionID>
  <BankTransactionID>65</BankTransactionID>
  <AuthorizationCode>365530</AuthorizationCode>
  <Currency>242</Currency>
  <Amount>24.21</Amount>
  <Country>US</Country>
  <Buyer>
    <BuyerName>John Fitzgerald Kennedy</BuyerName>
    <BuyerEmail>johnny.kennedy@usa.com</BuyerEmail>
  </Buyer>
  <CustomInfo/>
  <TDLevel/>
  <ErrorCode>0</ErrorCode>
  <ErrorDescription>Transazione correttamente effettuata</ErrorDescription>
  <AlertCode/>
  <AlertDescription/>
  <TransactionKey>579428899</TransactionKey>
  <VbV>
    <VbVFlag>KO</VbVFlag>
    <VbVBuyer/>
    <VbVRisp/>
  </VbV>
  <MaskedPAN>40L76FDIEFMH1112</MaskedPAN>
  <PaymentMethod>VISA VBV</PaymentMethod>
  <ProductType></ProductType>
  <CVVPresent>Y</CVVPresent>
  <TOKEN>40L76FDIEFMH1112</TOKEN>
  <TokenExpiryMonth></TokenExpiryMonth>
  <TokenExpiryYear></TokenExpiryYear>
  <PayPalFee></PayPalFee>
  <RiskResponseCode>approved</RiskResponseCode>
  <RiskResponseDescription>the transaction is approved</RiskResponseDescription>

  <3DS>
    <AuthenticationResult>
      ...
    </AuthenticationResult>
    <InAppChallenge>
      ...
    </InAppChallenge>
  </3DS>
</GestPayS2S>
```



| Name           | Description | 
| -------------- | ----------- |
| `TransactionType` | `PAGAM` in response to `CallPagamS2S` |
| `TransactionResult` | Returns transaction result with `OK` or `KO` |
| `shopTransactionID` | shop transaction ID value |
| `BankTransactionID` | code given by bank to transaction | 
| `AuthorizationCode` | authorisation code | 
| `Currency` | [currency code](#currency-codes) |
| `Country` | nationality of the card issuer | 
| `CustomInfo` | custom parameters, if passed to the request | 
| `BuyerType` | Returns address name and e-mail of thebuyer divided as follows: <br> <ul><li>`BuyerEmail`: Returns the e-mail of the buyer</li><li>`BuyerName`: Returns the name of the buyer</li></ul> | 
| `ErrorCode` | a code related to the transaction result 
| `ErrorDescription` | the description connected to the ErrorCode value
| `AlertCode` | the violation code of the risk management criteria. See [Better Risk Management](<%= config[:doc_url] %>/sec/better-risk-management-reacting-to-suspicious-activity.html) for an accurate description. 
| `AlertDescription` | the description connected to the AlertCode value. See [Better Risk Management](<%= config[:doc_url] %>/sec/better-risk-management-reacting-to-suspicious-activity.html) for an accurate description. 
| `Amount` | the amount of the transaction
| `TransKey` | transaction ID value for 3D-Secure transactions 
| `VBV` | Returns the values for 3D-Secure as follows: <br><ul><li>`VbVFlag`: 3D-secure flag (`OK` or `KO`)</li><li>`VbVBuyer`:returns the flag Full Verified by Visa transaction</li><li>`VbVRisp`: Returns the encrypted string obtained by 3D-Secure directory</li></ul> |
| `MaskedPAN` | this field returns a token (to not confuse with `TOKEN`) that should not be stored or used as a credit card token. With this parameter the merchant can assess some risk management analisys, for example he can check if the same `MaskedPAN` has already done some purchases or is involved in frauds.  
| `PaymentMethod` | the credit card circuit / payment system used 
| `ProductType` | can be `Credit`, `Debit`, or empty.
| `CVVPresent` | `Y` if the CVV is present, `N` if not.
| `TOKEN` | contains a token that represents the credit card number. See [Handling Subscriptions](<%= config[:doc_url] %>/rec/handling-subscriptions.html) in the docs.
| `TokenExpiryMonth` | the token exiration month
| `TokenExpiryYear` | the token expiration year 
| `PayPalFee` | the fee owed to paypal. 
| `TDLevel` | Level of authentication for 3D-Secure transactions. `FULL` or `HALF`
| `RiskResponseCode` | Risk Fraud Score of the transaction, given by [ Gestpay Guaranteed Payment](<%= config[:doc_url] %>/sec/gestpay-guaranteed-payment.html). Possible values are: <ul><li>`created`: transaction has been received by the Gestpay Guaranteed Payment</li><li>`submitted`: transaction is under review</li><li>`approved`: transaction approved by  Gestpay Guaranteed Payment</li><li>`declined`: transaction not approved by  Gestpay Guaranteed Payment</li><li>`captured`: For *Select&Submit* plan, `captured` is returned for transactions that are not marked for review.</li><li>**any other value** is an error returned by  Gestpay Guaranteed Payment.</li></ul>
| `threeDS` | Object with information about 3ds authentication (described below)

The threeDS object contains two object:

- `AuthenticationResult` with those children

| Name | max length | description |
| ---- | :--------: | ----------- |
|  `authenticationLevel` | 2  | Transaction is successfully athenticated by 3DS:<ul><li>1H: 3DS 1.0 half</li><li>1F: 3DS 1.0 full</li><li>2F: 3DS 2.0 frictionless</li><li>2C: 3DS 2.0 challenge</li><li>2E: 3DS 2.0 exemption</li></ul>
|  `authenticationStatus`  | 1 | Status of authentication
|  `XID`  | 36 | Transaction unique id assigned by Directory Server
|  `AV`  | 28 | Cardholder Authentication Verification Value, proof of authentication done
|  `ECI` | 2 | Electronic Commerce Indicator 
|  `AVAlgorithm`  | 2 | Cardholder Authentication Verification Algoritm, valorized only with 3DS 1.0
| `transDetails` | object | 
| <div class="inside-icon"></div> `authData` | string | Transaction Authentication Data
| <div class="inside-icon"></div> `authMethod` | 2 | Transaction Authentication Method Possible values: <ul><li>01: Frictionless authentication occurred by ACS </li><li>02: Cardholder challenge occurred by ACS </li><li>03: AVS verified </li><li>04: Other issuer methods</li></ul>
| <div style="white-space: nowrap;"><div class="inside-icon"></div> `authTimestamp`</div> | 12 | Transaction Authentication Timestamp
| <div class="inside-icon"></div> `acsID` | 36 | ACS Transaction ID

- `InAppChallenge` (Tihs fields are valorized and usefull only in app integration)

| Name           | Description | 
| -------------- | ----------- |
| `threeDSServerTransID` | Universally unique transaction identifier assigned by the 3DS Server to identify a single transaction.
| `acsSignedContent` | Contains the JWS object (represented as a string) created by the ACS for the ARes message.
| `acsTransID` | Universally Unique transaction identifier assigned by the ACS to identify a single transaction.
| `acsURL` | Fully qualified URL of the ACS to be used for the challenge.
| `cardholderInfo` | Text provided by the ACS/Issuer to Cardholder during a Frictionless or Decoupled transaction. The Issuer can provide information to Cardholder. For example, “Additional authentication is needed for this transaction, please contact (Issuer Name) at xxx-xxx-xxxx.”
| `messageExtension` | Data necessary to support requirements not otherwise defined in the 3- D Secure message are carried in a Message Extension.
| `sdkTransID` | Universally unique transaction identifier assigned by the 3DS SDK to identify a single transaction


<aside class="notice">other fields that are undocumented are unused. This applies also to fields described in the old version of the documentation.</aside>
